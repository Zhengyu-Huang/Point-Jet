%PLOT_PTJETclear allnplot     = 5;           % plot every nplot-th saved framenprint    = 100*nplot;   % save every nprint-th saved frame as PostScript% read parametersparamsfdir      = pars.fdir;% data directory and filefnam      = 'beta=1_relax=0.16';dataf     = [pars.fdir, fnam, '.dat'];restf     = [pars.fdir, fnam, '.mat'];  % read parameter and restart fileload(restf, '-mat')pars.fdir = fdir;disp(sprintf('\nCurrent parameter settings:'))disp(sprintf('\tbeta  = %6.3f', pars.beta))disp(sprintf('\trelax = %10.3e', pars.relax))% extract dimension parametersnkx       = pars.nkx;nky       = pars.nky;nx        = pars.nx;ny        = pars.ny;% grid axesx         = linspace(0, pars.widthx, nx)';y         = linspace(-pars.widthy/2, pars.widthy/2, ny);dy        = gradient(y);% initialize wavenumbers wavnum    = wavnum_init(pars);% indices of points in the "interior" of the domainint_pts   = find(abs(y) < .95 * max(y));% PV contours to be plottedctrs      = [-2.^[2:-1:-2], 2.^[-2:1:2]];figure(1)set(gcf, 'Units', 'points')fwidth    = 800; % size of figure fheight   = 480; % height of figurefnsize    = 12;lwidth    = .4;  % linewidth in pointsfpos      = get(gcf, 'Position');fpos      = [0 0 fwidth fheight];set(gcf, 'Position', fpos, ...	 'PaperPositionMode', 'auto', ...	 'DefaultLineLineWidth', lwidth) set(0, 'DefaultAxesFontSize', fnsize);nsave     = 0;fid       = fopen(dataf, 'r', 'ieee-le');[t, wq]   = read_snapshot(fid, nkx, nky);warning offwhile ~feof(fid)  nsave   = nsave + 1;    if mod(nsave, nplot) == 0     gpv      = pv(wq, pars, y);    mean_pv  = mean(gpv);    enstr    = .5 * var(gpv);    %    wave_act = enstr ./ mean_pv;        subplot('Position', [0.08 0.110 0.53 0.815])     [cs,h]=contour(x, y, gpv', ctrs);    %hl=clabel(cs, h, 'manual');    %set(hl, 'FontSize', fnsize)    title(['PV (t=', sprintf('%3.2f', t), ')'])    axis([min(x) max(x) min(y) max(y)])    xlabel('x')    ylabel('y')        subplot('Position', [0.64 0.110 0.15 0.815])    plot(mean_pv, y)    axis([pars.beta*min(y)/2 pars.beta*max(y)/2 min(y) max(y)])    title('Mean PV')    xlabel('PVU')    set(gca, 'YTickLabel', '')     grid         subplot('Position', [0.82 0.110 0.15 0.815])    plot(enstr(:, int_pts), y(int_pts))    axis([0 .07 min(y) max(y)])    title('Potential enstrophy')    xlabel('PVU^2')%    [u, v] = velocities(wq, wavnum, pars);  %    plot(mean(u), y)%    axis([0 pars.widthy/2 min(y) max(y)])%    xlabel('u')%    title('Mean u')%    plot(mean(gpv .* v), y)%    axis([-.01 0.01 min(y) max(y)])%    xlabel('PV flux')    set(gca, 'YTickLabel', '')     grid     %    subplot('Position', [0.76 0.110 0.2 0.815])%    plot(wave_act(:, int_pts), y(int_pts))%    axis([-1 1 min(y) max(y)])%    xlabel('Wave activity')%    set(gca, 'YTickLabel', '') %    grid     M(nsave/nplot) = getframe(gcf);        if mod(nsave, nprint) == 0    %if t > 527    %  stop      print('-depsc', '-r600', ...	    [pars.fdir, fnam, '_t=', sprintf('%3.2f', t), '.eps'])%       figfile = [pars.fdir, fnam, '_t=', sprintf('%3.2f', t)];%       print('-dppmraw', [figfile, '.ppm']);%       [s,w] = unix(['convert ', '-verbose ', ...%		     figfile, '.ppm ', figfile, '.gif']);%       display(w);%       unix(['rm -f ', figfile, '.ppm ']);    end      end    [t, wq] = read_snapshot(fid, nkx, nky);  endwarning onfclose(fid);% show moviefigure(1)clfset(gca, 'Position', [0 0 1 1], ...	 'Box', 'off', ...	 'Ticklength', [0 0])movie(M, 4, 3)