close allparams;rs         = 0.01 * 2.^[-4:2:4];nr         = length(rs);cmap       = jet(2*nr);pars.nkx   = 1;        % only zonal mean is of interest herepars.nx    = 1;% initialize wavenumbers wavnum     = wavnum_init(pars);% initialize forcingforcing    = forcing_init(pars, wavnum);% streamfunction of background statevort0      = forcing.gfrcd_trcr;wvort0     = wfft2(vort0, pars.nkx, pars.nky);wpsi0      = - wavnum.kalpha .* wvort0;psi0       = gfft2(wpsi0, pars.nx, pars.ny);% grid axesy          = linspace(-pars.widthy/2, pars.widthy/2, pars.ny);dy         = gradient(y);dy(1)      = 0.5*dy(1);dy(end)    = 0.5*dy(end);% indices of points in the "interior" of the domainint_pts    = find(abs(y) < .95 * max(y));% indices of points in mixing regionmix_y      = 3/pars.beta;mix_pts    = find(abs(y) < mix_y);stats      = cell(nr, 1);mke_int    = zeros(nr, 1);eke_int    = zeros(nr, 1);for j=1:nr  fnam     = ['beta=1_relax=', num2str(rs(j))];  stats{j} = load([pars.fdir, fnam, '_stat', '.mat']);        figure(1);   plot(stats{j}.mpv, y, 'Color', cmap(2*j-1, :));  axis([-1.5 1.5 -2.5 2.5])  hold on    figure(2);   plot(stats{j}.mens(int_pts), y(int_pts), 'Color', cmap(2*j-1,:));   hold on    stats{j}.eke   = stats{j}.mke - .5 * stats{j}.mu.^2;  stats{j}.mvort = stats{j}.mpv - pars.beta * y;    % streamfunction   wvort          = wfft2(stats{j}.mvort, pars.nkx, pars.nky);  wpsi           = - wavnum.kalpha .* wvort;  stats{j}.mpsi  = gfft2(wpsi, pars.nx, pars.ny) ...      - pars.ubar * repmat(y(:)', pars.nx, 1);    figure(3)  plot(stats{j}.mpsi(mix_pts), stats{j}.mpv(mix_pts), ...       'Color', cmap(2*j-1,:));   hold on    figure(4)  plot(stats{j}.mpsi, y, 'Color', cmap(2*j-1,:));   hold on    mke_int(j)     = sum(stats{j}.mke(int_pts) .* dy(int_pts));  eke_int(j)     = sum(stats{j}.eke(int_pts) .* dy(int_pts));    figure(5)  plot(gradient(stats{j}.mpsi, stats{j}.mpv), y, ...       'Color', cmap(2*j-1,:));   hold on      figure(6);   plot(stats{j}.eke, y, 'Color', cmap(2*j-1, :));   hold on    figure(7);   plot(-forcing.grelax.*(stats{j}.mvort - vort0), y, 'Color', cmap(2*j-1,:));   hold on    figure(8);   plot((stats{j}.mpv - stats{1}.mpv), y, 'Color', cmap(2*j-1,:));   hold on  figure(9);  plot(stats{j}.mpv_flux, y, 'Color', cmap(2*j-1,:));   hold on      figure(10);  mpv_y          = gradient(stats{j}.mpv, y);  plot(-stats{j}.mpv_flux ./ mpv_y, y, 'Color', cmap(2*j-1,:));   hold on  endfigure(1)q0         = forcing.gfrcd_trcr + pars.beta * y;  plot(q0, y, 'k--')ylabel('y')xlabel('PV')title(['PV for r=', num2str(min(rs)), ', ..., ', num2str(max(rs))])grid on%print('-depsc', '-cmyk', '-r600', [pars.fdir, 'pv.eps'])figure(2)ylabel('y')xlabel('Enstrophy')title(['Enstrophy for r=', num2str(min(rs)), ', ..., ', num2str(max(rs))])grid on%print('-depsc', '-cmyk', '-r600', [pars.fdir, 'ens.eps'])figure(3)ylabel('PV \Delta\psi + \beta y')xlabel('Streamfunction \psi')title(['PV - streamfunction for |y| < ', num2str(mix_y), ...       ' and r=', num2str(min(rs)), ', ..., ', num2str(max(rs))])max_psi = min(mix_y^2, .5*(pars.widthy/4)^2);axis([-max_psi,  max_psi -2 2])grid on%print('-depsc', '-cmyk', '-r600', [pars.fdir, 'vort_streamfctn.eps'])figure(4)ylabel('y')xlabel('Streamfunction \psi')title(['Streamfunction for r=', num2str(min(rs)), ', ..., ', num2str(max(rs))])max_psi = ceil(.5*(pars.widthy/4)^2);axis([-max_psi max_psi -pars.widthy/2 pars.widthy/2])grid on%print('-depsc', '-cmyk', '-r600', [pars.fdir, 'streamfctn.eps'])figure(5)xlabel('\partial\psi/\partialq')ylabel('y')title(['\partial\Psi/\partialq for ', num2str(min(rs)), ', ..., ', ...       num2str(max(rs))])axis([-100, 100, -pars.widthy/2 pars.widthy/2])grid onfigure(6)ylabel('y')xlabel('EKE')title(['EKE for r=', num2str(min(rs)), ', ..., ', ...       num2str(max(rs))])axis([0, .015, -pars.widthy/2 pars.widthy/2])grid onfigure(7)ylabel('y')xlabel('Forcing')title(['-r(q - q_0) for r=', num2str(min(rs)), ', ..., ', ...       num2str(max(rs))])axis([-2e-2, 2e-2, -4 4])grid onfigure(8)ylabel('y')xlabel('Perturbation PV')title(['Deviation from small-dissipation limit for r=', num2str(min(rs)), ', ..., ', ...       num2str(max(rs))])axis([-3e-1, 3e-1, -4 4])grid onfigure(9)ylabel('y')xlabel('PV flux')title(['PV flux for r=', num2str(min(rs)), ', ..., ', ...       num2str(max(rs))])axis([-1e-2, 4e-2, -4 4])grid onfigure(10)ylabel('y')xlabel('PV Diffusivity')title(['PV diffusivity for r=', num2str(min(rs)), ', ..., ', ...       num2str(max(rs))])axis([-5e-1, 5e-1, -4 4])grid on