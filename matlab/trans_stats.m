%TRANS_STATS%Transient statistics% read parametersparams% data filesfnam     = 'beta=1_relax=0.000625';%fnam     = 'beta=1_relax=0.16';dataf    = [pars.fdir, fnam, '.dat'];restf    = [pars.fdir, fnam, '.mat'];transf   = [pars.fdir, fnam, '_trans', '.mat'];% read parameter and restart fileload(restf, '-mat')disp(sprintf('\nCurrent parameter settings:'))disp(sprintf('\tbeta  = %6.3f', pars.beta))disp(sprintf('\trelax = %10.3e', pars.relax))disp(sprintf('\nComputing time-dependent statistics...'))% initialize wavenumbers wavnum   = wavnum_init(pars);% grid axesy        = linspace(-pars.widthy/2, pars.widthy/2, pars.ny);dy       = gradient(y);% indices of points in the "interior" of the domainint_pts  = find(abs(y) < .95 * max(y));% initialize domain-integrated enstrophy and energy enstr_int= zeros(1, ceil(t/pars.dt_diag));ke_int   = zeros(1, ceil(t/pars.dt_diag));kem_int  = zeros(1, ceil(t/pars.dt_diag));taxis    = zeros(1, ceil(t/pars.dt_diag));nsave    = 0;fid      = fopen(dataf, 'r', 'ieee-le');[t, wq]  = read_snapshot(fid, pars.nkx, pars.nky);while ~feof(fid)  nsave  = nsave + 1;  gpv    = pv(wq, pars, y);  [u, v] = velocities(wq, wavnum, pars);    enstr  = .5 * var(gpv);  ke     = .5 * mean(u.^2 + v.^2);  kem    = .5 * ( mean(u).^2 + mean(v).^2 );    enstr_int(nsave) = sum(enstr(int_pts) .* dy(int_pts));  ke_int(nsave)    = sum(ke(int_pts) .* dy(int_pts));  kem_int(nsave)   = sum(kem(int_pts) .* dy(int_pts));  taxis(nsave)     = t;      [t, wq] = read_snapshot(fid, pars.nkx, pars.nky);  endfclose(fid);enstr_int = enstr_int(1:nsave);ke_int    = ke_int(1:nsave);kem_int   = kem_int(1:nsave);taxis     = taxis(1:nsave);if exist(transf) == 2  error(['File ', transf, ' already exists.']) else  save(transf, 'pars', 'enstr_int', 'ke_int', 'kem_int', 'taxis', '-mat')    disp(sprintf('\nWriting statistics to file: %s', transf))end% enstrophyfigure(1)clfplot(taxis, enstr_int)ylabel('Enstrophy')xlabel('Time')grid ontitle(['Enstrophy (beta=', num2str(pars.beta), ', r=', num2str(pars.relax), ')'])%print('-depsc', '-r600', [pars.fdir, fnam, '_enstr.eps'])% eddy energyfigure(2)clfplot(taxis, ke_int - kem_int)ylabel('Energy')xlabel('Time')grid ontitle(['Eddy energy (beta=', num2str(pars.beta), ', r=', num2str(pars.relax), ')'])print('-depsc', '-r600', [pars.fdir, fnam, '_eke.eps'])