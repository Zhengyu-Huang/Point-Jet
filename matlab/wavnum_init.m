function wn = wavnum_init(p)    % size of wavenumber fields  nkx           = p.nkx;  nky           = p.nky;    % initialize output  wn.kx         = zeros(nkx, 1);  wn.ky         = zeros(1, nky);  wn.kalpha     = zeros(nkx, nky);    % spacing of wavenumber grid  delkx         = 2*pi/p.widthx;  delky         = 2*pi/p.widthy;    % x- and y-wavenumbers  wn.kx         = [0:nkx-1]'*delkx;  wn.ky         = [0:ceil(nky/2)-1, -floor(nky/2):-1]*delky;    % determine kalpha such that   %     FT(advected variable) = -(kalpha) * FT(streamfunction)  kxy2          = repmat(wn.kx.^2, 1, nky) + repmat(wn.ky.^2, nkx, 1);  idx           = find(kxy2 > eps);  wn.kalpha(idx)= kxy2(idx).^(-p.alpha/2);    % spectral damping (numerical dissipation)  wn.wnum_dmp   = p.nvisc * (kxy2/max(max(kxy2))).^4;