function forcing = forcing_init(pars, wavnum);%FORCING_INIT   Initialize forcing.    % extract dimension parameters  ny                 = pars.ny;  nky                = pars.nky;    % extract y-wavenumber vector and make sure it is a row vector   ky                 = wavnum.ky(:)';    % vorticity of point jet is step function   gfrcd_trcr              = zeros(1, ny);  gfrcd_trcr(2:ny/2-1)    =  pars.Gamma;   gfrcd_trcr(ny/2+1:ny-1) = -pars.Gamma;    % relaxation coefficient  grelax             = pars.relax * ones(1, ny);  %y                  = linspace(-pars.widthy/2, pars.widthy/2, ny);  %isfc               = find(abs(y) < .1 / pars.beta);  %grelax(isfc)       = 5*pars.relax;    % spectral filtering   filter             = 1 - abs(ky/max(ky));    wfrcd_trcr         = wfft2(gfrcd_trcr, 1, nky);  gfrcd_trcr         = gfft2(filter .* wfrcd_trcr, 1, ny);    %wrelax             = wfft2(grelax, 1, nky);  %grelax             = gfft2(filter .* wrelax, 1, ny);    % return forcing structure  forcing.gfrcd_trcr = gfrcd_trcr;  forcing.grelax     = grelax;