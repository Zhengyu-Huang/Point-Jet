function [wdq_dt] = dq_dt(wq, forcing, wn, p)%DQ_DT   Time-tendency of conserved tracer in barotropic or SQG flow.%      DQ_DT(q, forcing, wavnum, pars) returns the time tendency%     %                   dq/dt = - J(Psi, q) - D .* (q - q0)%%      of the tracer q in Fourier space. The input q and the output%      DQ_DT are matrices of Fourier coefficients. For barotropic%      flow, the tracer q is the vorticity; for surface QG flow, the%      tracer q is the potential temperature. The streamfunction Psi%      in Fourier space is related to the vorticity q in Fourier space%      by% %                          Psi = - K^(-alpha) .* q, %  %      where K = sqrt(k^2 + l^2) is the total horizontal wavenumber%      and alpha = 2 for barotropic flow and alpha = 1 for SQG%      flow. The input structure wavnum must contain the following%      wavenumber fields:%%         wavnum.kx:          vector of x-wavenumbers k;%         wavnum.ky:          vector of y-wavenumbers l;%         wavnum.kalpha:      matrix of (k^2+l^2)^(-alpha/2).% %      The input structure forcing must contain the relaxation%      coefficient D = forcing.grelax and the background state q0 =%      forcing.gfrcd_trcr as functions of latitude.%%      The input structure pars must contain the following%      parameters:%%         pars.nx, pars.ny:   number of grid points in x and y;   %         pars.nkx, pars.nky: x- and y-dimension of Fourier fields;%         pars.ubar:          x-velocity of background flow;  %         pars.beta:          background y-gradient of tracer.    % streamfunction   wpsi       = - wn.kalpha .* wq;  % advection  wadv       = wjacobian(wq, wpsi, wn.kx, wn.ky, p.nx, p.ny) ...      - complex(0, repmat(wn.kx(:), 1, p.nky)) .* ( p.beta*wpsi + p.ubar*wq );  % forcing   gfrcng     = repmat(forcing.grelax, p.nx, 1) .* ...      ( repmat(forcing.gfrcd_trcr, p.nx, 1) - gfft2(wq, p.nx, p.ny) );  wfrcng     = wfft2(gfrcng, p.nkx, p.nky);      % time tendency of tracer field  wdq_dt     =  wadv + wfrcng;      